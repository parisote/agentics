{
    "entry": "detect_intent",
    "state": [
        {
            "name": "intent",
            "type": "string"
        },
        {
            "name": "noIntent",
            "type": "string"
        },
        {
            "name": "step",
            "type": "int"
        }
    ],
    "nodes":[
        {
            "name": "detect_intent",
            "type": "agent",
            "prompt": "Your job is detect intent from client between seller or buyer. And answer with intent, for example: intent = buyer",
            "functions": [
                {
                    "type": "pre",
                     "code": "bagMap := bag.(map[string]interface{})\nrawStep := bagMap[\"step\"].(reflect.Value)\nfldStep := rawStep.FieldByName(\"Step\")\nfldStep.SetInt(fldStep.Int() + 20)\nfmt.Println(\"pre\", fldStep.Int())"
                },
                {
                    "type": "post",
                     "code": "bagMap := bag.(map[string]interface{})\nraw := bagMap[\"intent\"].(reflect.Value)\nrawNoIntent := bagMap[\"noIntent\"].(reflect.Value)\nrawStep := bagMap[\"step\"].(reflect.Value)\nfld := raw.FieldByName(\"Intent\")\nfldTwo := rawNoIntent.FieldByName(\"NoIntent\")\nfldStep := rawStep.FieldByName(\"Step\")\nmsg := bagMap[\"messages\"].([]string)[len(bagMap[\"messages\"].([]string))-1]\nfld.SetString(strings.Split(msg, \" = \")[1])\nfldStep.SetInt(fldStep.Int() + 10)\nif strings.Split(msg, \" = \")[1] == \"buyer\" {\nfldTwo.SetString(\"seller\")\n} else {\nfldTwo.SetString(\"buyer\")\n}"
                }
            ]
        },
        {
            "name": "context_agent",
            "type": "agent",
            "prompt": "Your job is say hello to client and ask for a car. If {intent} is buyer, say hello to client and ask for a car. If {intent} is seller, say hello to client and ask for a car."
        }
    ],
    "edges": [
        {
            "source": "detect_intent",
            "target": "context_agent"
        }
    ],
    "metadata": {}
}